type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LandMinted @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  boundaryPoints: [Coordinates!]! # array of boundary points
  details: LandDetails! # land details
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LandValueUpdated @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  newValue: BigInt! # updated land value
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Owner @entity(immutable:true) {
  id: ID!
  address: Bytes!
  totalTokens: BigInt!
  totalValue: BigInt!
  tokenIds: [BigInt!]! 
}

type Coordinates @entity {
  id: ID!
  latitude: BigInt!
  longitude: BigInt!
}

type LandDetails @entity {
  id: ID!
  size: BigInt!
  zoning: Int!
  registrationDate: BigInt!
  region: Int!
  city: Int!
  landName: String!
  value: BigInt!
  imageUrl: String!
}

type BatchMetadataUpdate @entity(immutable: true) {
  id: Bytes!
  fromTokenId: BigInt!
  toTokenId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MetadataUpdate @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}